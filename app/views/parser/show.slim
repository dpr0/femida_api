.hero-body
  .container.has-text-centered
    = form_for @csv_user, url: parser_path(params[:id]), method: :patch, data: { turbo: false } do |f|
      .columns
        .column.is-2
          .field
            label.label.has-text-success-dark Кол-во строк
            .control
              = text_field_tag :rows, @csv_parser.rows, class: 'input is-medium', disabled: true
        .column.is-2
          .field
            label.label.has-text-success-dark Разделитель
            .control
              = text_field_tag :separator, ';', class: 'input is-medium'
        .column.is-2
          .field
            label.label.has-text-success-dark Статус
            .control
              = text_field_tag :status, "#{@csv_parser.status} - #{CsvParser::STATUSES[@csv_parser.status]}", class: 'input is-medium', disabled: true
        .column.is-3
        .column.is-3
          .field
            label.label.has-text-success-dark Действие
            - if @csv_parser.status == 0
              = f.submit 'Сохранить', class: 'button is-success'
            - if @csv_parser.status == 1
              = link_to 'Распарсить файл', parser_parse_path(@csv_parser.file_id), method: :post, data: { turbo: true, turbo_method: :post }, class: 'button is-primary'
            - if @csv_parser.status == 3 || @csv_parser.status == 5
              .buttons.has-addons
                - opts = { method: :post, data: { turbo: true, turbo_method: :post }, class: 'button is-primary is-fullwidth' }
                = link_to 'Проверка solar phone',  parser_solar_phone_check_path(@csv_parser.file_id), opts
                = link_to 'Проверка solar фмо+др', parser_solar_passp_check_path(@csv_parser.file_id), opts
                = link_to 'Проверка inn',                  parser_inn_check_path(@csv_parser.file_id), opts
                = link_to 'Проверка parsed_users',        parser_user_check_path(@csv_parser.file_id), opts
                = link_to 'Проверка db_req ОКБ',        parser_db_okb_check_path(@csv_parser.file_id), opts
                = link_to 'Проверка ОКБ',                  parser_okb_check_path(@csv_parser.file_id), opts
                = link_to 'Скачать CSV',                     parser_get_csv_path(@csv_parser.file_id), target: '_blank', class: 'button outlined is-primary is-fullwidth'

      - if @csv_users.present?
        .columns
          .column.is-3
            .field
              label.label.has-text-success-dark Добавлено уникальных записей в БД
              .control
                = text_field_tag :rows, @csv_users.size, class: 'input is-medium', disabled: true
          .column.is-3
            .field
              label.label.has-text-success-dark Записей проверено
              .control
                = text_field_tag :rows, @csv_users.count { |x| x.is_phone_verified != nil }, class: 'input is-medium', disabled: true
      - if @csv_users.present?
        .columns
          .column.is-6
            .field
              label.label.has-text-success-dark Телефон подтвержден
              .control
                - verified = @csv_users.select { |x| x.is_phone_verified == true }
                - map = verified.group_by(&:is_phone_verified_source).map { |k, v| [k, v.size] }.map { |val| "#{val[0] || 'nil'}: #{val[1]}" }
                = text_field_tag :rows, "#{verified.size} (#{map.join(', ')})", class: 'input is-medium', disabled: true

          .column.is-6
            .field
              label.label.has-text-success-dark Паспорт подтвержден
              .control
                - verified = @csv_users.select { |x| x.is_passport_verified == true }
                - map = verified.group_by(&:is_passport_verified_source).map { |k, v| [k, v.size] }.map { |val| "#{val[0] || 'nil'}: #{val[1]}" }
                = text_field_tag :rows, "#{verified.size} (#{map.join(', ')})", class: 'input is-medium', disabled: true

      - if @csv_parser.status == 0
        .columns
          label.label.has-text-success-dark Аттрибуты из первой строки
        .columns
          .content
            ol type="1"
              - @headers.each do |col|
                li
                  - if @csv_user.attribute_names.include?(col)
                    .has-text-primary = col
                  - elsif @csv_user.attribute_names.find { |x| x.include?(col[0..3]) || col.include?(x[0..3]) }
                    .has-text-grey = col
                  - else
                    .has-text-danger = col
      - if @csv_parser.status < 2
        - %w[external_id phone passport last_name first_name middle_name birth_date].each_slice(4) do |slice|
          .columns
            - slice.each do |ff|
              .column.is-3
                .field
                  label.label.has-text-success-dark = ff
                  .control
                    - fff = @headers.select { |col| ff.include?(col[0..3]) || col.include?(ff[0..3]) }
                    = text_field_tag ff, @csv_parser.status == 1 && @csv_parser.send(ff) ? @headers[@csv_parser.send(ff)] : fff, class: 'input is-medium'

javascript:
  var elements = document.getElementsByClassName("buttons");
  var hideButtons = () => elements[0].style.display = 'none';
  for (var i = 0; i < elements.length; i++) {
    elements[i].addEventListener('click', hideButtons, false);
  }
